---
AWSTemplateFormatVersion: "2010-09-09"
Description: "The jeffers.io site"
Resources:
  artifactsBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: "artifacts.jeffers.io"
  websiteBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: "website.jeffers.io"
      WebsiteConfiguration:
        IndexDocument: "index.html"
  devCodeBuildRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "codebuild.amazonaws.com"
                - "codepipeline.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: "DevCodeBuildPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - "*"
              - Effect: "Allow"
                Action:
                  - "codebuild:BatchGetBuilds"
                  - "codebuild:StartBuild"
                Resource:
                  - "*"
              - Effect: "Allow"
                Action:
                  - "s3:getObject"
                  - "s3:putObject"
                Resource:
                  - !Join ["/", [!GetAtt "artifactsBucket.Arn", "*"]]
                  - !Join ["/", [!GetAtt "websiteBucket.Arn", "*"]]
              - Effect: "Allow"
                Action:
                  - "ecr:BatchCheckLayerAvailability"
                  - "ecr:GetDownloadUrlForLayer"
                  - "ecr:BatchGetImage"
                  - "ecr:GetAuthorizationToken"
                Resource:
                  - "*"
      RoleName: "DevCodeBuildServiceRole"
  devBuild:
    Type: "AWS::CodeBuild::Project"
    DependsOn: "devCodeBuildRole"
    Properties:
      Artifacts:
        Location: !Ref "artifactsBucket"
        OverrideArtifactName: true
        Packaging: "ZIP"
        Type: "S3"
      BadgeEnabled: false
      Description: "The jeffers.io dev website build"
      Environment:
        ComputeType: "BUILD_GENERAL1_SMALL"
        Image: "aws/codebuild/standard:2.0"
        Type: "LINUX_CONTAINER"
      Name: "dev-jeffers-io"
      ServiceRole: !Ref "devCodeBuildRole"
      Source:
        Auth:
          Type: "OAUTH"
        Location: "https://github.com/jeffers-io/jeffers.io.git"
        ReportBuildStatus: true
        Type: "GITHUB"
      Triggers:
        Webhook: true
  devDeploy:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      ArtifactStore:
        Location: !Ref "artifactsBucket"
        Type: "S3"
      Name: "dev-deploy"
      RoleArn: !GetAtt "devCodeBuildRole.Arn"
      Stages:
        - Name: "Source"
          Actions:
            - Name: "SourceAction"
              ActionTypeId:
                Category: "Source"
                Owner: "ThirdParty"
                Provider: "GitHub"
                Version: "1"
              Configuration:
                Owner: "jeffers-io"
                Repo: "jeffers.io"
                PollForSourceChanges: false
                Branch: "develop"
                OAuthToken: "{{resolve:secretsmanager:CICD/Sources/:SecretString:GithubPersonalAccessToken}}"
              OutputArtifacts:
                - Name: "Sources"
        - Name: "Build"
          Actions:
            - Name: "BuildAction"
              ActionTypeId:
                Category: "Build"
                Owner: "AWS"
                Provider: "CodeBuild"
                Version: "1"
              Configuration:
                ProjectName: "dev-jeffers-io"
              InputArtifacts:
                - Name: "Sources"
              OutputArtifacts:
                - Name: "WebArchive"
        - Name: "Deploy"
          Actions:
            - Name: "DeployAction"
              ActionTypeId:
                Category: "Deploy"
                Owner: "AWS"
                Provider: "S3"
                Version: "1"
              Configuration:
                BucketName: !Ref "websiteBucket"
                Extract: true
              InputArtifacts:
                - Name: "WebArchive"
  developGithubWebhook:
    Type: "AWS::CodePipeline::Webhook"
    Properties:
      Authentication: "GITHUB_HMAC"
      AuthenticationConfiguration:
        SecretToken: "{{resolve:secretsmanager:CICD/Sources/:SecretString:GithubWebhookSecret}}"
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: "refs/heads/develop"
      Name: dev-github-webhook
      RegisterWithThirdParty: true
      TargetAction: "SourceAction"
      TargetPipeline: !Ref devDeploy
      TargetPipelineVersion: !GetAtt "devDeploy.Version"
  devOriginAccessIdentity:
    Type: "AWS::CloudFront::CloudFrontOriginAccessIdentity"
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: "The DEV origin access identity"
  devWebsiteBucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Ref websiteBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              CanonicalUser: !GetAtt "devOriginAccessIdentity.S3CanonicalUserId"
            Action: "s3:GetObject"
            Resource:
              - !Join ["/", [!GetAtt "websiteBucket.Arn", "*"]]
  devCloudFront:
    Type: "AWS::CloudFront::Distribution"
    DependsOn: "devOriginAccessIdentity"
    Properties:
      DistributionConfig:
        Aliases:
          - "dev.jeffers.io"
        DefaultCacheBehavior:
          AllowedMethods:
            - "GET"
            - "HEAD"
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: "none"
          TargetOriginId: "devS3Origin"
          ViewerProtocolPolicy: "redirect-to-https"
        DefaultRootObject: "index.html"
        Enabled: true
        HttpVersion: "http2"
        Origins:
          - DomainName: !GetAtt websiteBucket.DomainName
            Id: "devS3Origin"
            S3OriginConfig:
              OriginAccessIdentity: !Join ["", ["origin-access-identity/cloudfront/", !Ref "devOriginAccessIdentity"]]
        PriceClass: "PriceClass_100"
        ViewerCertificate:
          AcmCertificateArn: "arn:aws:acm:us-east-1:639049943747:certificate/e87a7c77-14c0-4ec7-91a4-38a78ab00490"
          MinimumProtocolVersion: "TLSv1.1_2016"
          SslSupportMethod: "sni-only"
  devARecord:
    Type: "AWS::Route53::RecordSet"
    Properties:
      AliasTarget:
        DNSName: !GetAtt "devCloudFront.DomainName"
        HostedZoneId: "Z2FDTNDATAQYW2"  # Hard-coded from AWS docs
      HostedZoneName: "jeffers.io."
      Name: "dev.jeffers.io"
      Type: A
